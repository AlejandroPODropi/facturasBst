name: 🚀 CD - Deploy to GCP

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: facturasbst
  REGION: us-central1
  REPOSITORY: facturas-repo

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    name: 🐍 Deploy Backend to Cloud Run
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: ☁️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: 🏗️ Build and push Docker image
      run: |
        gcloud builds submit --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/backend:latest ./backend
        
    - name: 🚀 Deploy to Cloud Run
      run: |
        gcloud run deploy backend \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/backend:latest \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}"

  deploy-frontend:
    runs-on: ubuntu-latest
    name: ⚛️ Deploy Frontend to Cloud Storage
    needs: deploy-backend
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📦 Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: 🏗️ Build project
      run: |
        cd frontend
        npm run build
        
    - name: 🔐 Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: ☁️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: 🗂️ Upload to Cloud Storage
      run: |
        gsutil -m cp -r frontend/dist/* gs://facturas-frontend-$PROJECT_ID/
        gsutil -m cp frontend/dist/index.html gs://facturas-frontend-$PROJECT_ID/index.html

  notify:
    runs-on: ubuntu-latest
    name: 📢 Notify Deployment
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
    - name: 📢 Notify Success
      if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success'
      run: |
        echo "✅ Deployment successful!"
        echo "Backend: https://backend-$REGION-$PROJECT_ID.a.run.app"
        echo "Frontend: https://storage.googleapis.com/facturas-frontend-$PROJECT_ID/index.html"
        
    - name: 📢 Notify Failure
      if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure'
      run: |
        echo "❌ Deployment failed!"
        echo "Backend status: ${{ needs.deploy-backend.result }}"
        echo "Frontend status: ${{ needs.deploy-frontend.result }}"