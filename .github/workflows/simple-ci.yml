name: 🧪 CI - Tests and Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    name: 🐍 Backend Tests
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 📦 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-spa tesseract-ocr-eng
        
    - name: 📦 Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🧪 Run tests
      run: |
        cd backend
        pytest tests/ -v --cov=src --cov-report=xml
        
    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  frontend-tests:
    runs-on: ubuntu-latest
    name: ⚛️ Frontend Tests
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 📦 Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: 🧪 Run tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
        
    - name: 🔍 Run linting
      run: |
        cd frontend
        npm run lint
        
    - name: 🏗️ Build project
      run: |
        cd frontend
        npm run build

  security-scan:
    runs-on: ubuntu-latest
    name: 🔒 Security Scan
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 📦 Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install safety bandit
        
    - name: 🔒 Run security checks
      run: |
        cd backend
        safety check -r requirements.txt
        bandit -r src/ -f json -o bandit-report.json || true
        
    - name: 📊 Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: backend/bandit-report.json